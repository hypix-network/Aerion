package dev.hypix.dataparser.damage;

import java.util.Map.Entry;
import java.util.Set;

import com.alibaba.fastjson2.JSONObject;

import dev.hypix.dataparser.Parser;

public final class DamageTypeParser implements Parser {

    @Override
    public String requiredFile() {
        return "damage-type.json";
    }

    @Override
    public ParsedFile parse(final JSONObject json) {
        final Set<Entry<String, Object>> entries = json.entrySet();
        final StringBuilder builder = new StringBuilder();

        builder.append(
            """
            package dev.hypix.dataparser.damage;

            import lombok.Getter;

            /* Autogenerated - Don't touch :) */
            @Getter
            public final class DamageType {
                public static final DamageType[] ALL = new DamageType[%amount%];

                private final String id;
                private final double exhaustion;
                private final String messageId;
                private final String scaling;
                private final String effect;

                public DamageType(String id, double exhaustion, String messageId, String scaling, String effect) {
                    this.id = id;
                    this.exhaustion = exhaustion;
                    this.messageId = messageId;
                    this.scaling = scaling;
                    this.effect = effect;
                }

                private DamageType(String id, double exhaustion, String messageId, String scaling, int index) {
                    this(id, exhaustion, messageId, scaling, "hurt");
                    ALL[index] = this;
                }

                public static final DamageType
            """.replaceFirst("%amount%", String.valueOf(entries.size()))
        );

        int i = 0;
        for (final Entry<String, Object> entry : entries) {
            if (!(entry.getValue() instanceof JSONObject damage)) {
                System.out.println("Invalid entry : " + entry.getKey() + " need be a json object...");
                return null;
            }
            final String messageId = damage.getString("message_id");
            final double exhaustion = damage.getDoubleValue("exhaustion");
            final String scaling = damage.getString("scaling");

            builder.append("        ");
            builder.append(toFieldName(entry.getKey()));
            builder.append(" = new DamageType(");
            append(builder, entry.getKey(), exhaustion, messageId, scaling, i);
            builder.append(')');

            builder.append(++i == entries.size() ? ';' : ',');
            builder.append('\n');
        }

        builder.append('}');
    
        return new ParsedFile("damage/DamageType.java", builder.toString());
    }
}
