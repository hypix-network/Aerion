package dev.hypix.dataparser.trim.material;

import java.util.Map.Entry;
import java.util.Set;

import com.alibaba.fastjson2.JSONObject;

import dev.hypix.dataparser.Parser;

public final class TrimMaterialParser implements Parser {

    @Override
    public String requiredFile() {
        return "trim-material.json";
    }

    @Override
    public ParsedFile parse(JSONObject json) {
        final Set<Entry<String, Object>> entries = json.entrySet();   
        final StringBuilder builder = new StringBuilder();
        builder.append(
            """
            package dev.hypix.dataparser.trim.material;

            import lombok.Getter;

            /* Autogenerated - Don't touch :) */
            @Getter
            public final class TrimMaterial {

                public static final TrimMaterial[] ALL = new TrimMaterial[%amount%];
                private final String name;
                private final String description;
                private final String ingredient;
                private final double modelIndex;

                public TrimMaterial(String name, String description, String ingredient, double modelIndex) {
                    this.name = name;
                    this.description = description;
                    this.ingredient = ingredient;
                    this.modelIndex = modelIndex;
                }

                private TrimMaterial(String name, String description, String ingredient, double modelIndex, int index) {
                    this(name, description, ingredient, modelIndex);
                    ALL[index] = this;
                }

                public static final TrimMaterial        
            """.replaceFirst("%amount%", String.valueOf(entries.size()))
        );
    
        int i = 0;
        for (final Entry<String, Object> entry : entries) {
            if (!(entry.getValue() instanceof JSONObject trimMaterial)) {
                System.out.println("Invalid entry : " + entry.getKey() + " need be a json object...");
                return null;
            }
            final String description = trimMaterial.getJSONObject("description").getString("translate");
            final String ingredient = trimMaterial.getString("ingredient");
            final double modelIndex = trimMaterial.getDoubleValue("item_model_index");

            builder.append("        ");
            builder.append(toFieldName(entry.getKey()));
            builder.append(" = new TrimMaterial(");
            append(builder, entry.getKey(), description, ingredient, modelIndex, i);
            builder.append(')');
            builder.append(++i == entries.size() ? ';' : ',');
            builder.append('\n');
        }
        
        builder.append('}');
    
        return new ParsedFile("trim/material/TrimMaterial.java", builder.toString());
    }
}
